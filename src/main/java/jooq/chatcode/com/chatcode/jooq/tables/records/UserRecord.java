/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.records;


import com.chatcode.jooq.tables.User;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user.id</code>.
     */
    public UserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user.avatar_id</code>.
     */
    public UserRecord setAvatarId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user.avatar_id</code>.
     */
    public Long getAvatarId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>user.version</code>.
     */
    public UserRecord setVersion(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user.version</code>.
     */
    public Long getVersion() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>user.create_ip</code>.
     */
    public UserRecord setCreateIp(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>user.create_ip</code>.
     */
    public String getCreateIp() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user.date_created</code>.
     */
    public UserRecord setDateCreated(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>user.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>user.date_withdraw</code>.
     */
    public UserRecord setDateWithdraw(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>user.date_withdraw</code>.
     */
    public LocalDateTime getDateWithdraw() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>user.last_update_ip</code>.
     */
    public UserRecord setLastUpdateIp(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>user.last_update_ip</code>.
     */
    public String getLastUpdateIp() {
        return (String) get(6);
    }

    /**
     * Setter for <code>user.last_updated</code>.
     */
    public UserRecord setLastUpdated(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>user.last_updated</code>.
     */
    public LocalDateTime getLastUpdated() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>user.username</code>.
     */
    public UserRecord setUsername(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>user.username</code>.
     */
    public String getUsername() {
        return (String) get(8);
    }

    /**
     * Setter for <code>user.withdraw</code>.
     */
    public UserRecord setWithdraw(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>user.withdraw</code>.
     */
    public Boolean getWithdraw() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>user.status</code>.
     */
    public UserRecord setStatus(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>user.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, Long avatarId, Long version, String createIp, LocalDateTime dateCreated, LocalDateTime dateWithdraw, String lastUpdateIp, LocalDateTime lastUpdated, String username, Boolean withdraw, Integer status) {
        super(User.USER);

        setId(id);
        setAvatarId(avatarId);
        setVersion(version);
        setCreateIp(createIp);
        setDateCreated(dateCreated);
        setDateWithdraw(dateWithdraw);
        setLastUpdateIp(lastUpdateIp);
        setLastUpdated(lastUpdated);
        setUsername(username);
        setWithdraw(withdraw);
        setStatus(status);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(com.chatcode.jooq.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setId(value.getId());
            setAvatarId(value.getAvatarId());
            setVersion(value.getVersion());
            setCreateIp(value.getCreateIp());
            setDateCreated(value.getDateCreated());
            setDateWithdraw(value.getDateWithdraw());
            setLastUpdateIp(value.getLastUpdateIp());
            setLastUpdated(value.getLastUpdated());
            setUsername(value.getUsername());
            setWithdraw(value.getWithdraw());
            setStatus(value.getStatus());
            resetChangedOnNotNull();
        }
    }
}
