/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.records;


import com.chatcode.jooq.tables.Article;

import java.time.LocalDateTime;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleRecord extends TableRecordImpl<ArticleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CHATCODE.article.id</code>.
     */
    public ArticleRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>CHATCODE.article.version</code>.
     */
    public ArticleRecord setVersion(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.version</code>.
     */
    public Long getVersion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>CHATCODE.article.completed</code>.
     */
    public ArticleRecord setCompleted(Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.completed</code>.
     */
    public Boolean getCompleted() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>CHATCODE.article.content_id</code>.
     */
    public ArticleRecord setContentId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.content_id</code>.
     */
    public Long getContentId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>CHATCODE.article.create_ip</code>.
     */
    public ArticleRecord setCreateIp(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.create_ip</code>.
     */
    public String getCreateIp() {
        return (String) get(4);
    }

    /**
     * Setter for <code>CHATCODE.article.date_created</code>.
     */
    public ArticleRecord setDateCreated(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>CHATCODE.article.enabled</code>.
     */
    public ArticleRecord setEnabled(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>CHATCODE.article.last_editor_id</code>.
     */
    public ArticleRecord setLastEditorId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.last_editor_id</code>.
     */
    public Long getLastEditorId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>CHATCODE.article.last_updated</code>.
     */
    public ArticleRecord setLastUpdated(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.last_updated</code>.
     */
    public LocalDateTime getLastUpdated() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>CHATCODE.article.note_count</code>.
     */
    public ArticleRecord setNoteCount(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.note_count</code>.
     */
    public Integer getNoteCount() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>CHATCODE.article.scrap_count</code>.
     */
    public ArticleRecord setScrapCount(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.scrap_count</code>.
     */
    public Integer getScrapCount() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>CHATCODE.article.selected_note_id</code>.
     */
    public ArticleRecord setSelectedNoteId(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.selected_note_id</code>.
     */
    public Long getSelectedNoteId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>CHATCODE.article.tag_string</code>.
     */
    public ArticleRecord setTagString(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.tag_string</code>.
     */
    public String getTagString() {
        return (String) get(12);
    }

    /**
     * Setter for <code>CHATCODE.article.title</code>.
     */
    public ArticleRecord setTitle(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.title</code>.
     */
    public String getTitle() {
        return (String) get(13);
    }

    /**
     * Setter for <code>CHATCODE.article.view_count</code>.
     */
    public ArticleRecord setViewCount(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.view_count</code>.
     */
    public Integer getViewCount() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>CHATCODE.article.like_count</code>.
     */
    public ArticleRecord setLikeCount(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.like_count</code>.
     */
    public Integer getLikeCount() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>CHATCODE.article.dislike_count</code>.
     */
    public ArticleRecord setDislikeCount(Integer value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.dislike_count</code>.
     */
    public Integer getDislikeCount() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>CHATCODE.article.category_id</code>.
     */
    public ArticleRecord setCategoryId(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>CHATCODE.article.category_id</code>.
     */
    public String getCategoryId() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArticleRecord
     */
    public ArticleRecord() {
        super(Article.ARTICLE);
    }

    /**
     * Create a detached, initialised ArticleRecord
     */
    public ArticleRecord(Long id, Long version, Boolean completed, Long contentId, String createIp, LocalDateTime dateCreated, Boolean enabled, Long lastEditorId, LocalDateTime lastUpdated, Integer noteCount, Integer scrapCount, Long selectedNoteId, String tagString, String title, Integer viewCount, Integer likeCount, Integer dislikeCount, String categoryId) {
        super(Article.ARTICLE);

        setId(id);
        setVersion(version);
        setCompleted(completed);
        setContentId(contentId);
        setCreateIp(createIp);
        setDateCreated(dateCreated);
        setEnabled(enabled);
        setLastEditorId(lastEditorId);
        setLastUpdated(lastUpdated);
        setNoteCount(noteCount);
        setScrapCount(scrapCount);
        setSelectedNoteId(selectedNoteId);
        setTagString(tagString);
        setTitle(title);
        setViewCount(viewCount);
        setLikeCount(likeCount);
        setDislikeCount(dislikeCount);
        setCategoryId(categoryId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ArticleRecord
     */
    public ArticleRecord(com.chatcode.jooq.tables.pojos.Article value) {
        super(Article.ARTICLE);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setCompleted(value.getCompleted());
            setContentId(value.getContentId());
            setCreateIp(value.getCreateIp());
            setDateCreated(value.getDateCreated());
            setEnabled(value.getEnabled());
            setLastEditorId(value.getLastEditorId());
            setLastUpdated(value.getLastUpdated());
            setNoteCount(value.getNoteCount());
            setScrapCount(value.getScrapCount());
            setSelectedNoteId(value.getSelectedNoteId());
            setTagString(value.getTagString());
            setTitle(value.getTitle());
            setViewCount(value.getViewCount());
            setLikeCount(value.getLikeCount());
            setDislikeCount(value.getDislikeCount());
            setCategoryId(value.getCategoryId());
            resetChangedOnNotNull();
        }
    }
}
