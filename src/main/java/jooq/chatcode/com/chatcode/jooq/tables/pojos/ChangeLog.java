/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangeLog implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Long version;
    private final Long articleId;
    private final Long avatarId;
    private final Long contentId;
    private final LocalDateTime dateCreated;
    private final String md5;
    private final String patch;
    private final Integer revision;
    private final String type;

    public ChangeLog(ChangeLog value) {
        this.id = value.id;
        this.version = value.version;
        this.articleId = value.articleId;
        this.avatarId = value.avatarId;
        this.contentId = value.contentId;
        this.dateCreated = value.dateCreated;
        this.md5 = value.md5;
        this.patch = value.patch;
        this.revision = value.revision;
        this.type = value.type;
    }

    public ChangeLog(
        Long id,
        Long version,
        Long articleId,
        Long avatarId,
        Long contentId,
        LocalDateTime dateCreated,
        String md5,
        String patch,
        Integer revision,
        String type
    ) {
        this.id = id;
        this.version = version;
        this.articleId = articleId;
        this.avatarId = avatarId;
        this.contentId = contentId;
        this.dateCreated = dateCreated;
        this.md5 = md5;
        this.patch = patch;
        this.revision = revision;
        this.type = type;
    }

    /**
     * Getter for <code>change_log.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>change_log.version</code>.
     */
    public Long getVersion() {
        return this.version;
    }

    /**
     * Getter for <code>change_log.article_id</code>.
     */
    public Long getArticleId() {
        return this.articleId;
    }

    /**
     * Getter for <code>change_log.avatar_id</code>.
     */
    public Long getAvatarId() {
        return this.avatarId;
    }

    /**
     * Getter for <code>change_log.content_id</code>.
     */
    public Long getContentId() {
        return this.contentId;
    }

    /**
     * Getter for <code>change_log.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return this.dateCreated;
    }

    /**
     * Getter for <code>change_log.md5</code>.
     */
    public String getMd5() {
        return this.md5;
    }

    /**
     * Getter for <code>change_log.patch</code>.
     */
    public String getPatch() {
        return this.patch;
    }

    /**
     * Getter for <code>change_log.revision</code>.
     */
    public Integer getRevision() {
        return this.revision;
    }

    /**
     * Getter for <code>change_log.type</code>.
     */
    public String getType() {
        return this.type;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ChangeLog other = (ChangeLog) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        if (this.articleId == null) {
            if (other.articleId != null)
                return false;
        }
        else if (!this.articleId.equals(other.articleId))
            return false;
        if (this.avatarId == null) {
            if (other.avatarId != null)
                return false;
        }
        else if (!this.avatarId.equals(other.avatarId))
            return false;
        if (this.contentId == null) {
            if (other.contentId != null)
                return false;
        }
        else if (!this.contentId.equals(other.contentId))
            return false;
        if (this.dateCreated == null) {
            if (other.dateCreated != null)
                return false;
        }
        else if (!this.dateCreated.equals(other.dateCreated))
            return false;
        if (this.md5 == null) {
            if (other.md5 != null)
                return false;
        }
        else if (!this.md5.equals(other.md5))
            return false;
        if (this.patch == null) {
            if (other.patch != null)
                return false;
        }
        else if (!this.patch.equals(other.patch))
            return false;
        if (this.revision == null) {
            if (other.revision != null)
                return false;
        }
        else if (!this.revision.equals(other.revision))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.articleId == null) ? 0 : this.articleId.hashCode());
        result = prime * result + ((this.avatarId == null) ? 0 : this.avatarId.hashCode());
        result = prime * result + ((this.contentId == null) ? 0 : this.contentId.hashCode());
        result = prime * result + ((this.dateCreated == null) ? 0 : this.dateCreated.hashCode());
        result = prime * result + ((this.md5 == null) ? 0 : this.md5.hashCode());
        result = prime * result + ((this.patch == null) ? 0 : this.patch.hashCode());
        result = prime * result + ((this.revision == null) ? 0 : this.revision.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChangeLog (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(articleId);
        sb.append(", ").append(avatarId);
        sb.append(", ").append(contentId);
        sb.append(", ").append(dateCreated);
        sb.append(", ").append(md5);
        sb.append(", ").append(patch);
        sb.append(", ").append(revision);
        sb.append(", ").append(type);

        sb.append(")");
        return sb.toString();
    }
}
