/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.records;


import com.chatcode.jooq.tables.UserRole;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleRecord extends UpdatableRecordImpl<UserRoleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_role.user_id</code>.
     */
    public UserRoleRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user_role.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user_role.role_id</code>.
     */
    public UserRoleRecord setRoleId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user_role.role_id</code>.
     */
    public Long getRoleId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleRecord
     */
    public UserRoleRecord() {
        super(UserRole.USER_ROLE);
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(Long userId, Long roleId) {
        super(UserRole.USER_ROLE);

        setUserId(userId);
        setRoleId(roleId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(com.chatcode.jooq.tables.pojos.UserRole value) {
        super(UserRole.USER_ROLE);

        if (value != null) {
            setUserId(value.getUserId());
            setRoleId(value.getRoleId());
            resetChangedOnNotNull();
        }
    }
}
