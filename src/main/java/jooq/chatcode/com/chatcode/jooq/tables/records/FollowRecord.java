/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.records;


import com.chatcode.jooq.tables.Follow;

import java.time.LocalDateTime;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FollowRecord extends UpdatableRecordImpl<FollowRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>follow.follower_id</code>.
     */
    public FollowRecord setFollowerId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>follow.follower_id</code>.
     */
    public Long getFollowerId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>follow.following_id</code>.
     */
    public FollowRecord setFollowingId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>follow.following_id</code>.
     */
    public Long getFollowingId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>follow.date_created</code>.
     */
    public FollowRecord setDateCreated(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>follow.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FollowRecord
     */
    public FollowRecord() {
        super(Follow.FOLLOW);
    }

    /**
     * Create a detached, initialised FollowRecord
     */
    public FollowRecord(Long followerId, Long followingId, LocalDateTime dateCreated) {
        super(Follow.FOLLOW);

        setFollowerId(followerId);
        setFollowingId(followingId);
        setDateCreated(dateCreated);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FollowRecord
     */
    public FollowRecord(com.chatcode.jooq.tables.pojos.Follow value) {
        super(Follow.FOLLOW);

        if (value != null) {
            setFollowerId(value.getFollowerId());
            setFollowingId(value.getFollowingId());
            setDateCreated(value.getDateCreated());
            resetChangedOnNotNull();
        }
    }
}
