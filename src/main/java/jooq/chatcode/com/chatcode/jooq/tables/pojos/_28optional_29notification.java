/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _28optional_29notification implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Long articleId;
    private final Long senderId;
    private final Long receiverId;
    private final Long contentId;
    private final Long version;
    private final LocalDateTime dateCreated;
    private final LocalDateTime lastUpdated;
    private final String type;

    public _28optional_29notification(_28optional_29notification value) {
        this.id = value.id;
        this.articleId = value.articleId;
        this.senderId = value.senderId;
        this.receiverId = value.receiverId;
        this.contentId = value.contentId;
        this.version = value.version;
        this.dateCreated = value.dateCreated;
        this.lastUpdated = value.lastUpdated;
        this.type = value.type;
    }

    public _28optional_29notification(
        Long id,
        Long articleId,
        Long senderId,
        Long receiverId,
        Long contentId,
        Long version,
        LocalDateTime dateCreated,
        LocalDateTime lastUpdated,
        String type
    ) {
        this.id = id;
        this.articleId = articleId;
        this.senderId = senderId;
        this.receiverId = receiverId;
        this.contentId = contentId;
        this.version = version;
        this.dateCreated = dateCreated;
        this.lastUpdated = lastUpdated;
        this.type = type;
    }

    /**
     * Getter for <code>(optional)notification.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>(optional)notification.article_id</code>.
     */
    public Long getArticleId() {
        return this.articleId;
    }

    /**
     * Getter for <code>(optional)notification.sender_id</code>.
     */
    public Long getSenderId() {
        return this.senderId;
    }

    /**
     * Getter for <code>(optional)notification.receiver_id</code>.
     */
    public Long getReceiverId() {
        return this.receiverId;
    }

    /**
     * Getter for <code>(optional)notification.content_id</code>.
     */
    public Long getContentId() {
        return this.contentId;
    }

    /**
     * Getter for <code>(optional)notification.version</code>.
     */
    public Long getVersion() {
        return this.version;
    }

    /**
     * Getter for <code>(optional)notification.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return this.dateCreated;
    }

    /**
     * Getter for <code>(optional)notification.last_updated</code>.
     */
    public LocalDateTime getLastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Getter for <code>(optional)notification.type</code>.
     */
    public String getType() {
        return this.type;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final _28optional_29notification other = (_28optional_29notification) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.articleId == null) {
            if (other.articleId != null)
                return false;
        }
        else if (!this.articleId.equals(other.articleId))
            return false;
        if (this.senderId == null) {
            if (other.senderId != null)
                return false;
        }
        else if (!this.senderId.equals(other.senderId))
            return false;
        if (this.receiverId == null) {
            if (other.receiverId != null)
                return false;
        }
        else if (!this.receiverId.equals(other.receiverId))
            return false;
        if (this.contentId == null) {
            if (other.contentId != null)
                return false;
        }
        else if (!this.contentId.equals(other.contentId))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        if (this.dateCreated == null) {
            if (other.dateCreated != null)
                return false;
        }
        else if (!this.dateCreated.equals(other.dateCreated))
            return false;
        if (this.lastUpdated == null) {
            if (other.lastUpdated != null)
                return false;
        }
        else if (!this.lastUpdated.equals(other.lastUpdated))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.articleId == null) ? 0 : this.articleId.hashCode());
        result = prime * result + ((this.senderId == null) ? 0 : this.senderId.hashCode());
        result = prime * result + ((this.receiverId == null) ? 0 : this.receiverId.hashCode());
        result = prime * result + ((this.contentId == null) ? 0 : this.contentId.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.dateCreated == null) ? 0 : this.dateCreated.hashCode());
        result = prime * result + ((this.lastUpdated == null) ? 0 : this.lastUpdated.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("_28optional_29notification (");

        sb.append(id);
        sb.append(", ").append(articleId);
        sb.append(", ").append(senderId);
        sb.append(", ").append(receiverId);
        sb.append(", ").append(contentId);
        sb.append(", ").append(version);
        sb.append(", ").append(dateCreated);
        sb.append(", ").append(lastUpdated);
        sb.append(", ").append(type);

        sb.append(")");
        return sb.toString();
    }
}
