/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.records;


import com.chatcode.jooq.tables.CategoryOld;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryOldRecord extends UpdatableRecordImpl<CategoryOldRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>category_old.code</code>.
     */
    public CategoryOldRecord setCode(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>category_old.code</code>.
     */
    public String getCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>category_old.version</code>.
     */
    public CategoryOldRecord setVersion(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>category_old.version</code>.
     */
    public Long getVersion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>category_old.date_created</code>.
     */
    public CategoryOldRecord setDateCreated(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>category_old.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>category_old.default_label</code>.
     */
    public CategoryOldRecord setDefaultLabel(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>category_old.default_label</code>.
     */
    public String getDefaultLabel() {
        return (String) get(3);
    }

    /**
     * Setter for <code>category_old.enabled</code>.
     */
    public CategoryOldRecord setEnabled(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>category_old.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>category_old.external_link</code>.
     */
    public CategoryOldRecord setExternalLink(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>category_old.external_link</code>.
     */
    public String getExternalLink() {
        return (String) get(5);
    }

    /**
     * Setter for <code>category_old.icon_css_names</code>.
     */
    public CategoryOldRecord setIconCssNames(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>category_old.icon_css_names</code>.
     */
    public String getIconCssNames() {
        return (String) get(6);
    }

    /**
     * Setter for <code>category_old.isurl</code>.
     */
    public CategoryOldRecord setIsurl(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>category_old.isurl</code>.
     */
    public Boolean getIsurl() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>category_old.label_code</code>.
     */
    public CategoryOldRecord setLabelCode(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>category_old.label_code</code>.
     */
    public String getLabelCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>category_old.last_updated</code>.
     */
    public CategoryOldRecord setLastUpdated(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>category_old.last_updated</code>.
     */
    public LocalDateTime getLastUpdated() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>category_old.level</code>.
     */
    public CategoryOldRecord setLevel(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>category_old.level</code>.
     */
    public Integer getLevel() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>category_old.parent_id</code>.
     */
    public CategoryOldRecord setParentId(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>category_old.parent_id</code>.
     */
    public String getParentId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>category_old.require_tag</code>.
     */
    public CategoryOldRecord setRequireTag(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>category_old.require_tag</code>.
     */
    public Boolean getRequireTag() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>category_old.sort_order</code>.
     */
    public CategoryOldRecord setSortOrder(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>category_old.sort_order</code>.
     */
    public Integer getSortOrder() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>category_old.url</code>.
     */
    public CategoryOldRecord setUrl(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>category_old.url</code>.
     */
    public String getUrl() {
        return (String) get(14);
    }

    /**
     * Setter for <code>category_old.use_evaluate</code>.
     */
    public CategoryOldRecord setUseEvaluate(Boolean value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>category_old.use_evaluate</code>.
     */
    public Boolean getUseEvaluate() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>category_old.use_note</code>.
     */
    public CategoryOldRecord setUseNote(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>category_old.use_note</code>.
     */
    public Boolean getUseNote() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>category_old.use_opinion</code>.
     */
    public CategoryOldRecord setUseOpinion(Boolean value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>category_old.use_opinion</code>.
     */
    public Boolean getUseOpinion() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>category_old.use_tag</code>.
     */
    public CategoryOldRecord setUseTag(Boolean value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>category_old.use_tag</code>.
     */
    public Boolean getUseTag() {
        return (Boolean) get(18);
    }

    /**
     * Setter for <code>category_old.writable</code>.
     */
    public CategoryOldRecord setWritable(Boolean value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>category_old.writable</code>.
     */
    public Boolean getWritable() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>category_old.write_by_external_link</code>.
     */
    public CategoryOldRecord setWriteByExternalLink(Boolean value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>category_old.write_by_external_link</code>.
     */
    public Boolean getWriteByExternalLink() {
        return (Boolean) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryOldRecord
     */
    public CategoryOldRecord() {
        super(CategoryOld.CATEGORY_OLD);
    }

    /**
     * Create a detached, initialised CategoryOldRecord
     */
    public CategoryOldRecord(String code, Long version, LocalDateTime dateCreated, String defaultLabel, Boolean enabled, String externalLink, String iconCssNames, Boolean isurl, String labelCode, LocalDateTime lastUpdated, Integer level, String parentId, Boolean requireTag, Integer sortOrder, String url, Boolean useEvaluate, Boolean useNote, Boolean useOpinion, Boolean useTag, Boolean writable, Boolean writeByExternalLink) {
        super(CategoryOld.CATEGORY_OLD);

        setCode(code);
        setVersion(version);
        setDateCreated(dateCreated);
        setDefaultLabel(defaultLabel);
        setEnabled(enabled);
        setExternalLink(externalLink);
        setIconCssNames(iconCssNames);
        setIsurl(isurl);
        setLabelCode(labelCode);
        setLastUpdated(lastUpdated);
        setLevel(level);
        setParentId(parentId);
        setRequireTag(requireTag);
        setSortOrder(sortOrder);
        setUrl(url);
        setUseEvaluate(useEvaluate);
        setUseNote(useNote);
        setUseOpinion(useOpinion);
        setUseTag(useTag);
        setWritable(writable);
        setWriteByExternalLink(writeByExternalLink);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CategoryOldRecord
     */
    public CategoryOldRecord(com.chatcode.jooq.tables.pojos.CategoryOld value) {
        super(CategoryOld.CATEGORY_OLD);

        if (value != null) {
            setCode(value.getCode());
            setVersion(value.getVersion());
            setDateCreated(value.getDateCreated());
            setDefaultLabel(value.getDefaultLabel());
            setEnabled(value.getEnabled());
            setExternalLink(value.getExternalLink());
            setIconCssNames(value.getIconCssNames());
            setIsurl(value.getIsurl());
            setLabelCode(value.getLabelCode());
            setLastUpdated(value.getLastUpdated());
            setLevel(value.getLevel());
            setParentId(value.getParentId());
            setRequireTag(value.getRequireTag());
            setSortOrder(value.getSortOrder());
            setUrl(value.getUrl());
            setUseEvaluate(value.getUseEvaluate());
            setUseNote(value.getUseNote());
            setUseOpinion(value.getUseOpinion());
            setUseTag(value.getUseTag());
            setWritable(value.getWritable());
            setWriteByExternalLink(value.getWriteByExternalLink());
            resetChangedOnNotNull();
        }
    }
}
