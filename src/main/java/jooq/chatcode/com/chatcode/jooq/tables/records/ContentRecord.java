/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.records;


import com.chatcode.jooq.tables.Content;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentRecord extends UpdatableRecordImpl<ContentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>content.id</code>.
     */
    public ContentRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>content.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>content.text</code>.
     */
    public ContentRecord setText(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>content.text</code>.
     */
    public String getText() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContentRecord
     */
    public ContentRecord() {
        super(Content.CONTENT);
    }

    /**
     * Create a detached, initialised ContentRecord
     */
    public ContentRecord(Long id, String text) {
        super(Content.CONTENT);

        setId(id);
        setText(text);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ContentRecord
     */
    public ContentRecord(com.chatcode.jooq.tables.pojos.Content value) {
        super(Content.CONTENT);

        if (value != null) {
            setId(value.getId());
            setText(value.getText());
            resetChangedOnNotNull();
        }
    }
}
