/*
 * This file is generated by jOOQ.
 */
package com.chatcode.jooq.tables.records;


import com.chatcode.jooq.tables.ContentVote;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentVoteRecord extends UpdatableRecordImpl<ContentVoteRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>content_vote.id</code>.
     */
    public ContentVoteRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>content_vote.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>content_vote.article_id</code>.
     */
    public ContentVoteRecord setArticleId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>content_vote.article_id</code>.
     */
    public Long getArticleId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>content_vote.voter_id</code>.
     */
    public ContentVoteRecord setVoterId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>content_vote.voter_id</code>.
     */
    public Long getVoterId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>content_vote.content_id</code>.
     */
    public ContentVoteRecord setContentId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>content_vote.content_id</code>.
     */
    public Long getContentId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>content_vote.date_created</code>.
     */
    public ContentVoteRecord setDateCreated(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>content_vote.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>content_vote.point</code>.
     */
    public ContentVoteRecord setPoint(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>content_vote.point</code>.
     */
    public Integer getPoint() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContentVoteRecord
     */
    public ContentVoteRecord() {
        super(ContentVote.CONTENT_VOTE);
    }

    /**
     * Create a detached, initialised ContentVoteRecord
     */
    public ContentVoteRecord(Long id, Long articleId, Long voterId, Long contentId, LocalDateTime dateCreated, Integer point) {
        super(ContentVote.CONTENT_VOTE);

        setId(id);
        setArticleId(articleId);
        setVoterId(voterId);
        setContentId(contentId);
        setDateCreated(dateCreated);
        setPoint(point);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ContentVoteRecord
     */
    public ContentVoteRecord(com.chatcode.jooq.tables.pojos.ContentVote value) {
        super(ContentVote.CONTENT_VOTE);

        if (value != null) {
            setId(value.getId());
            setArticleId(value.getArticleId());
            setVoterId(value.getVoterId());
            setContentId(value.getContentId());
            setDateCreated(value.getDateCreated());
            setPoint(value.getPoint());
            resetChangedOnNotNull();
        }
    }
}
