plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'nu.studer.jooq' version '8.2.3'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 둘중 선택
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Jooq
    jooqGenerator 'com.mysql:mysql-connector-j'

    // Spring Security
//    implementation 'org.springframework.boot:spring-boot-starter-security'

    // lombook
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // swagger
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


jooq {
    version = '3.19.1'  // the default (can be omitted)
    edition = nu.studer.gradle.jooq.JooqEdition.OSS  // the default (can be omitted)

    configurations {
        main {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = true  // default (can be omitted)

            generationTool {
                jdbc {
                    driver = 'com.mysql.cj.jdbc.Driver'
                    url = 'jdbc:mysql://localhost:3306'
                    user = 'root'
                    password = '1234'
                    properties {
                        property {
                            key = 'ssl'
                            value = 'false'
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'CHATCODE'
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'com.chatcode.jooq'
                        directory = 'src/main/java/jooq/chatcode'  // default (can be omitted)
                    }
                }
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


//tasks.named('generateJooq').configure {
//    launcher = javaToolchains.launcherFor {
//        languageVersion = JavaLanguageVersion.of(17)
//    }
//}